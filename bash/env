#!/usr/bin/env bash
# shellcheck disable=SC2154
export LANG='en_US.UTF-8'
export LC_TIME='en_GB.UTF-8'
export LC_NUMERIC='en_US.UTF-8'
if [ "$__os_family" = "Mac" ]; then
    DIR="cx"
    SYM_LINK="gx"
    SOCKET="Dx"
    PIPE="Dx"
    EXE="Bx"
    BLOCK_SP="Dx"
    CHAR_SP="Dx"
    EXE_SETUID="Bx"
    EXE_SETGID="Bx"
    DIR_W_O_STICKY="cx"
    DIR_W_O_NO_STICKY="cx"

    LSCOLORS="${DIR}${SYM_LINK}${SOCKET}${PIPE}${EXE}${BLOCK_SP}${CHAR_SP}\
${EXE_SETUID}${EXE_SETGID}${DIR_W_O_STICKY}${DIR_W_O_NO_STICKY}"
    export LSCOLORS

    export GREP_COLOR='38;5;74'
else
    #bd = block (buffered) special file
    #cd = character (unbuffered) special file
    #di = directory
    #do = door
    #ec = endcode - Non-filename text
    #ex = file which is executable (ie. has 'x' set in permissions).
    #fi = file
    #lc = leftcode - Opening terminal code
    #ln = symbolic link
    #mi = non-existent file pointed to by a symbolic link (visible when you type ls -l)
    #no = normal - Global default, although everything should be something
    #or = symbolic link pointing to a non-existent file (orphan)
    #ow = other writable - Directory that is other-writable (o+w) and not sticky
    #pi = fifo file (named pipe)
    #rc = rightcode - Closing terminal code
    #sg = set gid - File that is setgid (g+s)
    #so = socket file
    #st = sticky - Directory with the sticky bit set (+t) and not other-writable
    #su = set uid - File that is setuid (u+s)
    #tw = sticky other writable - Directory that is sticky and other-writable (+t,o+w)
    #*.extension = Every file using this extension e.g. *.jpg

    if [ -s "$HOME/dotfiles/bash/ls_colors" ]; then
        # shellcheck source=/dev/null
        source "$HOME/dotfiles/bash/ls_colors"
    fi

    DIR=${PaleGreen3}
    SYM_LINK=${LightSkyBlue3}
    EXE=${BIndianRed}
    CHAR_SP=${BYellow}
    BLOCK_SP=${BYellow}
    STICKY_OW=${RTurquoise2}
    MISSING_LN=${RIndianRed}
    OTHER_WRITABLE=${DIR}

    LS_COLORS="di=${DIR}:ln=${SYM_LINK}:ex=${EXE}:cd=${CHAR_SP}:bd=${BLOCK_SP}:\
tw=${STICKY_OW}:mi=${MISSING_LN}:ow=${OTHER_WRITABLE}"
    export LS_COLORS

    export GREP_COLORS='mt='${SkyBlue3}':ms='${SkyBlue3}':mc='${SkyBlue3}':fn='${DeepPink3}
    export MANROFFOPT="-P -c"
fi
export MANPAGER="/usr/bin/less -Ri --use-color -Ddg -Du+c -DEWg"

[ "$__os_family" = "Mac" ] && JQ_NULL="1;30" || JQ_NULL=$BGrey50
JQ_FALSE="0;39"
JQ_TRUE="0;39"
JQ_NUMBERS="0;39"
[ "$__os_family" = "Mac" ] && JQ_STRINGS="0;35" || JQ_STRINGS=$Plum2
JQ_ARRAYS="1;39"
JQ_OBJECTS="1;39"
export JQ_COLORS="$JQ_NULL:$JQ_FALSE:$JQ_TRUE:$JQ_NUMBERS:$JQ_STRINGS:$JQ_ARRAYS:$JQ_OBJECTS"
export HISTFILESIZE=20000
export HISTSIZE=20000
export HISTIGNORE='&:l[slat]:cd:..:...:....:.....:......:.......:........\
:.........:..........:...........:cd -:[bf]g:jobs:exit:history:make:make clean\
:vim:view:tmux:ranger'
export HISTCONTROL="erasedups:ignoreboth"
export HISTTIMEFORMAT="%F %T "
export http_proxy=

# {{{ Maven

if [ -z "$M2" ] && [ -d /opt/apache-maven-3.6.0 ]; then
    export M2_HOME=/opt/apache-maven-3.6.0
    export M2=$M2_HOME/bin
fi
[ -n "$M2" ] && export MAVEN_OPTS="-Djansi.passthrough=true $MAVEN_OPTS" #colorize maven output

# }}}
# {{{ Gradle

[ -z "$GRADLE_USER_HOME" ] && [ -d "$HOME/.gradle" ] && export GRADLE_USER_HOME=$HOME/.gradle

# }}}
# {{{ Java

[ -z "$JAVA_HOME" ] && [ -d "/usr/lib/jvm/java-8-openjdk-amd64" ] && export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64
[ -z "$CATALINA_HOME" ] && [ -d "/opt/tomcat" ] && export CATALINA_HOME=/opt/tomcat

# }}}
export VISUAL=nvim
export EDITOR="$VISUAL"
export SVN_EDITOR="$VISUAL"
export GIT_EDITOR="$VISUAL"

export FZF_DEFAULT_OPTS='--layout=reverse --border --multi'
export PYGMENTIZE_STYLE=dracula
if [ -n "$RANGER_LEVEL" ]; then
    export PS1="\[${BGrey27}\][\[${SkyBlue2}\]ranger\[${BGrey27}\]]$PS1";
fi
